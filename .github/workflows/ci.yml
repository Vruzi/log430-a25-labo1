name: ci_on_self_hosted

on: [push, pull_request]

jobs:
  test-and-deploy:
    runs-on: [self-hosted, linux, X64]

    env:
      MONGODB_HOST: localhost
      MYSQL_HOST: localhost
      MYSQL_DB_NAME: mydb
      DB_USERNAME: user
      DB_PASSWORD: pass

    steps:
      - name: Checkout dépôt
        uses: actions/checkout@v4

      - name: Installer Python (si ta VM a accès sortant)
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.2'

      - name: Démarrer MySQL & MongoDB (Docker)
        working-directory: ci
        run: |
          docker compose up -d
          # attend que Mongo soit healthy
          for i in {1..60}; do
            s=$(docker inspect -f '{{.State.Health.Status}}' $(docker compose ps -q mongo) 2>/dev/null || echo starting)
            [ "$s" = "healthy" ] && break
            sleep 2
          done
          [ "$s" = "healthy" ] || (echo "Mongo non healthy" && docker compose logs mongo && exit 1)

          # attend que MySQL soit healthy
          for i in {1..90}; do
            s=$(docker inspect -f '{{.State.Health.Status}}' $(docker compose ps -q mysql) 2>/dev/null || echo starting)
            [ "$s" = "healthy" ] && break
            sleep 2
          done
          [ "$s" = "healthy" ] || (echo "MySQL non healthy" && docker compose logs mysql && exit 1)

      - name: Installer les dépendances
        run: |
          python -m pip install -U pip || python3 -m pip install -U pip
          pip install -r requirements.txt || true
          pip install pytest python-dotenv pymongo mysql-connector-python || true

      - name: Lancer les tests
        env:
          PYTHONPATH: src
        run: |
          python -m pytest -q || python3 -m pytest -q

      - name: Stopper les containers
        if: always()
        working-directory: ci
        run: docker compose down -v

      - name: Déploiement local
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh
