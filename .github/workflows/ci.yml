name: ci_on_self_hosted

on: [push, pull_request]

jobs:
  test-and-deploy:
    runs-on: [self-hosted, linux, X64]

    env:
      MONGODB_HOST: localhost
      MYSQL_HOST:   localhost
      MYSQL_DB_NAME: mydb

    steps:
      - name: Checkout dépôt
        uses: actions/checkout@v4

      - name: Installer Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.2'

      - name: Démarrer MySQL et init schéma
        run: |
          (sudo systemctl start mysql || sudo systemctl start mysqld) || true
          for i in {1..60}; do
            (mysqladmin ping -h 127.0.0.1 --silent >/dev/null 2>&1) && break
            sleep 1
          done
          sudo mysql <<'SQL'
          CREATE DATABASE IF NOT EXISTS mydb;
          CREATE USER IF NOT EXISTS 'user'@'localhost' IDENTIFIED BY 'pass';
          GRANT ALL PRIVILEGES ON mydb.* TO 'user'@'localhost';
          FLUSH PRIVILEGES;
          USE mydb;
          CREATE TABLE IF NOT EXISTS users (
            id INT AUTO_INCREMENT PRIMARY KEY,
            name  VARCHAR(255) NOT NULL,
            email VARCHAR(255) NOT NULL
          );
          SQL

      - name: Démarrer MongoDB et vérifier readiness
        run: |
          (sudo systemctl start mongod || sudo systemctl start mongodb) || true
          for i in {1..60}; do
            (mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' 2>/dev/null | grep -q '^1$') && exit 0
            (mongo   --quiet --eval 'db.runCommand({ ping: 1 }).ok' 2>/dev/null | grep -q '^1$') && exit 0
            sleep 1
          done
          echo "MongoDB n'est pas prêt"
          (sudo journalctl -u mongod --no-pager -n 100 || sudo journalctl -u mongodb --no-pager -n 100) || true
          exit 1

      - name: Créer .env (si nécessaire)
        run: |
          cat > .env <<'EOF'
          MONGODB_HOST=localhost
          MYSQL_HOST=localhost
          MYSQL_DB_NAME=mydb
          DB_USERNAME=user
          DB_PASSWORD=pass
          EOF

      - name: Installer les dépendances
        run: |
          python -m pip install -U pip || python3 -m pip install -U pip
          pip install -r requirements.txt || true
          pip install pytest python-dotenv pymongo mysql-connector-python || true

      - name: Tests Mongo
        env:
          PYTHONPATH: src
          DB_USERNAME: ""
          DB_PASSWORD: ""
        run: |
          python -m pytest -q -k "product" || python3 -m pytest -q -k "product"

      - name: Tests MySQL
        env:
          PYTHONPATH: src
          DB_USERNAME: "user"
          DB_PASSWORD: "pass"
        run: |
          python -m pytest -q -k "user" || python3 -m pytest -q -k "user"

      - name: Déploiement local
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh
